diff --git a/node_modules/@rocket.chat/sdk/lib/api/Livechat.d.ts b/node_modules/@rocket.chat/sdk/lib/api/Livechat.d.ts
index 2afba32..7ffd7e3 100644
--- a/node_modules/@rocket.chat/sdk/lib/api/Livechat.d.ts
+++ b/node_modules/@rocket.chat/sdk/lib/api/Livechat.d.ts
@@ -10,12 +10,14 @@ export default class ApiLivechat extends ApiBase {
     config(params?: ILivechatTokenAPI): Promise<any>;
     room(params?: INewLivechatRoomCredentialAPI): Promise<any>;
     closeChat({ rid }: ILivechatRoom): Promise<any>;
+    shareScreen({ rid, messageType }: any): Promise<any>;
     transferChat({ rid, department }: ILivechatRoom): Promise<any>;
     chatSurvey(survey: ILivechatRoomSurveyAPI): Promise<any>;
     visitor(): Promise<any>;
     grantVisitor(guest: INewLivechatGuestAPI): Promise<any>;
     deleteVisitor(): Promise<any>;
     updateVisitorStatus(status: string): Promise<any>;
+    updateCallStatus(callStatus: string, rid: string, callId: string): Promise<any>;
     nextAgent(department?: string): Promise<any>;
     agent({ rid }: any): Promise<any>;
     message(id: string, params: ILivechatRoom): Promise<any>;
diff --git a/node_modules/@rocket.chat/sdk/lib/api/Livechat.js b/node_modules/@rocket.chat/sdk/lib/api/Livechat.js
index de9ae29..112df7e 100644
--- a/node_modules/@rocket.chat/sdk/lib/api/Livechat.js
+++ b/node_modules/@rocket.chat/sdk/lib/api/Livechat.js
@@ -95,6 +95,10 @@ var ApiLivechat = /** @class */ (function (_super) {
         var rid = _a.rid;
         return this.post('livechat/room.close', { rid: rid, token: this.credentials.token }, false);
     };
+    ApiLivechat.prototype.shareScreen = function (_a) {
+        var rid = _a.rid, messageType = _a.messageType;
+        return this.post('livechat/room.shareScreen', { rid: rid, token: this.credentials.token, messageType: messageType }, false);
+    };
     ApiLivechat.prototype.transferChat = function (_a) {
         var rid = _a.rid, department = _a.department;
         return (this.post('livechat/room.transfer', { rid: rid, token: this.credentials.token, department: department }, false));
@@ -133,6 +137,14 @@ var ApiLivechat = /** @class */ (function (_super) {
             }
         }); });
     };
+    ApiLivechat.prototype.updateCallStatus = function (callStatus, rid, callId) {
+        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
+            switch (_a.label) {
+                case 0: return [4 /*yield*/, this.post("livechat/visitor.callStatus", { token: this.credentials.token, callStatus: callStatus, rid: rid, callId: callId })];
+                case 1: return [2 /*return*/, (_a.sent()).callStatus];
+            }
+        }); });
+    };
     ApiLivechat.prototype.nextAgent = function (department) {
         if (department === void 0) { department = ''; }
         return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
diff --git a/node_modules/@rocket.chat/sdk/lib/api/Livechat.js.map b/node_modules/@rocket.chat/sdk/lib/api/Livechat.js.map
index f382ee0..9a64fd5 100644
--- a/node_modules/@rocket.chat/sdk/lib/api/Livechat.js.map
+++ b/node_modules/@rocket.chat/sdk/lib/api/Livechat.js.map
@@ -1 +1 @@
-{"version":3,"file":"Livechat.js","sourceRoot":"","sources":["../../../src/lib/api/Livechat.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module ApiLivechat\n * Provides a client for making requests with Livechat Rocket.Chat's REST API\n */\n\nimport {\n\tILivechatTokenAPI,\n\tILivechatRoomCredentialAPI,\n\tILivechatRoomSurveyAPI,\n\tINewLivechatGuestAPI,\n\tINewLivechatMessageAPI,\n\tILivechatRoomMessagesAPI,\n\tINewLivechatNavigationAPI,\n\tINewLivechatCustomFieldAPI,\n\tINewLivechatOfflineMessageAPI,\n\tINewLivechatCustomFieldsAPI,\n\tILivechatRoom,\n\tINewLivechatRoomCredentialAPI,\n\tILivechatUploadAPI\n} from '../../interfaces'\n\nimport ApiBase from './api'\n\nexport default class ApiLivechat extends ApiBase {\n  credentials: ILivechatRoomCredentialAPI = {} as any\n  login (guest: INewLivechatGuestAPI | any) { return this.grantVisitor(guest) }\n  async config (params?: ILivechatTokenAPI) { return (await this.get('livechat/config', params, false)).config }\n  async room (params?: INewLivechatRoomCredentialAPI) { return (await this.get('livechat/room', { token: this.credentials.token, ...params }, false)).room }\n  closeChat ({ rid }: ILivechatRoom) { return this.post('livechat/room.close', { rid, token: this.credentials.token }, false) }\n  transferChat ({ rid, department }: ILivechatRoom) { return (this.post('livechat/room.transfer', { rid, token: this.credentials.token, department }, false)) }\n  chatSurvey (survey: ILivechatRoomSurveyAPI) { return (this.post('livechat/room.survey', { rid: survey.rid, token: this.credentials.token, data: survey.data }, false)) }\n  visitor () { return this.get(`livechat/visitor/${this.credentials.token}`) }\n  async grantVisitor (guest: INewLivechatGuestAPI) {\n    const { visitor } = await this.post('livechat/visitor', guest, false)\n    this.credentials = {\n      token: visitor.token\n    }\n    return visitor\n  }\n  async deleteVisitor () { return (await this.del(`livechat/visitor/${this.credentials.token}`)).visitor }\n  async updateVisitorStatus (status: string) { return (await this.post(`livechat/visitor.status`, { token: this.credentials.token, status })).status }\n  async nextAgent (department: string = '') { return (await this.get(`livechat/agent.next/${this.credentials.token}`, { department })).agent }\n  async agent ({ rid }: any) { return (await this.get(`livechat/agent.info/${rid}/${this.credentials.token}`)).agent }\n  async message (id: string, params: ILivechatRoom) { return (await this.get(`livechat/message/${id}`, { token: this.credentials.token, ...params })).message }\n  sendMessage (message: INewLivechatMessageAPI) { return (this.post('livechat/message', { ...message, token: this.credentials.token }, false)) }\n  editMessage (id: string, message: INewLivechatMessageAPI) { return (this.put(`livechat/message/${id}`, message, false)) }\n  deleteMessage (id: string, { rid }: ILivechatRoom) { return (this.del(`livechat/message/${id}`, { rid, token: this.credentials.token }, false)) }\n  async loadMessages (rid: string, params?: ILivechatRoomMessagesAPI) { return (await this.get(`livechat/messages.history/${rid}`, { ...params, token: this.credentials.token }, false)).messages }\n  async sendOfflineMessage (message: INewLivechatOfflineMessageAPI) { return (await this.post('livechat/offline.message', { ...message }, false)).message }\n  sendVisitorNavigation (page: INewLivechatNavigationAPI) { return (this.post('livechat/page.visited', { ...page }, false)) }\n  requestTranscript (email: string, { rid }: ILivechatRoom) { return (this.post('livechat/transcript', { token: this.credentials.token, rid, email }, false)) }\n  videoCall ({ rid }: ILivechatRoom) { return this.get(`livechat/video.call/${this.credentials.token}`, { rid }, false) }\n  sendCustomField (field: INewLivechatCustomFieldAPI) { return this.post('livechat/custom.field', field, false) }\n  sendCustomFields (fields: INewLivechatCustomFieldsAPI) { return this.post('livechat/custom.fields', fields, false) }\n  uploadFile (params: ILivechatUploadAPI) {\n    const formData = new FormData()\n    const headersNeededForUpload = {\n      'x-visitor-token': this.credentials.token\n    }\n    formData.append('file', params.file)\n    return this.post(`livechat/upload/${params.rid}`, formData, false, undefined, { customHeaders: headersNeededForUpload })\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"Livechat.js","sourceRoot":"","sources":["../../../src/lib/api/Livechat.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module ApiLivechat\n * Provides a client for making requests with Livechat Rocket.Chat's REST API\n */\n\nimport {\n\tILivechatTokenAPI,\n\tILivechatRoomCredentialAPI,\n\tILivechatRoomSurveyAPI,\n\tINewLivechatGuestAPI,\n\tINewLivechatMessageAPI,\n\tILivechatRoomMessagesAPI,\n\tINewLivechatNavigationAPI,\n\tINewLivechatCustomFieldAPI,\n\tINewLivechatOfflineMessageAPI,\n\tINewLivechatCustomFieldsAPI,\n\tILivechatRoom,\n\tINewLivechatRoomCredentialAPI,\n\tILivechatUploadAPI\n} from '../../interfaces'\n\nimport ApiBase from './api'\n\nexport default class ApiLivechat extends ApiBase {\n  credentials: ILivechatRoomCredentialAPI = {} as any\n  login (guest: INewLivechatGuestAPI | any) { return this.grantVisitor(guest) }\n  async config (params?: ILivechatTokenAPI) { return (await this.get('livechat/config', params, false)).config }\n  async room (params?: INewLivechatRoomCredentialAPI) { return (await this.get('livechat/room', { token: this.credentials.token, ...params }, false)).room }\n  closeChat ({ rid }: ILivechatRoom) { return this.post('livechat/room.close', { rid, token: this.credentials.token }, false) }\n  shareScreen ({ rid, messageType }: any) { return this.post('livechat/room.shareScreen', { rid, token: this.credentials.token, messageType }, false) }\n  transferChat ({ rid, department }: ILivechatRoom) { return (this.post('livechat/room.transfer', { rid, token: this.credentials.token, department }, false)) }\n  chatSurvey (survey: ILivechatRoomSurveyAPI) { return (this.post('livechat/room.survey', { rid: survey.rid, token: this.credentials.token, data: survey.data }, false)) }\n  visitor () { return this.get(`livechat/visitor/${this.credentials.token}`) }\n  async grantVisitor (guest: INewLivechatGuestAPI) {\n    const { visitor } = await this.post('livechat/visitor', guest, false)\n    this.credentials = {\n      token: visitor.token\n    }\n    return visitor\n  }\n  async deleteVisitor () { return (await this.del(`livechat/visitor/${this.credentials.token}`)).visitor }\n  async updateVisitorStatus (status: string) { return (await this.post(`livechat/visitor.status`, { token: this.credentials.token, status })).status }\n  async updateCallStatus (callStatus: string, rid: string, callId: string) { return (await this.post(`livechat/visitor.callStatus`, { token: this.credentials.token, callStatus, rid, callId })).callStatus }\n  async nextAgent (department: string = '') { return (await this.get(`livechat/agent.next/${this.credentials.token}`, { department })).agent }\n  async agent ({ rid }: any) { return (await this.get(`livechat/agent.info/${rid}/${this.credentials.token}`)).agent }\n  async message (id: string, params: ILivechatRoom) { return (await this.get(`livechat/message/${id}`, { token: this.credentials.token, ...params })).message }\n  sendMessage (message: INewLivechatMessageAPI) { return (this.post('livechat/message', { ...message, token: this.credentials.token }, false)) }\n  editMessage (id: string, message: INewLivechatMessageAPI) { return (this.put(`livechat/message/${id}`, message, false)) }\n  deleteMessage (id: string, { rid }: ILivechatRoom) { return (this.del(`livechat/message/${id}`, { rid, token: this.credentials.token }, false)) }\n  async loadMessages (rid: string, params?: ILivechatRoomMessagesAPI) { return (await this.get(`livechat/messages.history/${rid}`, { ...params, token: this.credentials.token }, false)).messages }\n  async sendOfflineMessage (message: INewLivechatOfflineMessageAPI) { return (await this.post('livechat/offline.message', { ...message }, false)).message }\n  sendVisitorNavigation (page: INewLivechatNavigationAPI) { return (this.post('livechat/page.visited', { ...page }, false)) }\n  requestTranscript (email: string, { rid }: ILivechatRoom) { return (this.post('livechat/transcript', { token: this.credentials.token, rid, email }, false)) }\n  videoCall ({ rid }: ILivechatRoom) { return this.get(`livechat/video.call/${this.credentials.token}`, { rid }, false) }\n  sendCustomField (field: INewLivechatCustomFieldAPI) { return this.post('livechat/custom.field', field, false) }\n  sendCustomFields (fields: INewLivechatCustomFieldsAPI) { return this.post('livechat/custom.fields', fields, false) }\n  uploadFile (params: ILivechatUploadAPI) {\n    const formData = new FormData()\n    const headersNeededForUpload = {\n      'x-visitor-token': this.credentials.token\n    }\n    formData.append('file', params.file)\n    return this.post(`livechat/upload/${params.rid}`, formData, false, undefined, { customHeaders: headersNeededForUpload })\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@rocket.chat/sdk/lib/clients/Livechat.d.ts b/node_modules/@rocket.chat/sdk/lib/clients/Livechat.d.ts
index 4ecc19f..9fa65ad 100644
--- a/node_modules/@rocket.chat/sdk/lib/clients/Livechat.d.ts
+++ b/node_modules/@rocket.chat/sdk/lib/clients/Livechat.d.ts
@@ -24,7 +24,9 @@ export default class LivechatClient extends LivechatRest implements ISocket {
     onAgentChange(rid: string, cb: ICallback): Promise<void>;
     onAgentStatusChange(rid: string, cb: ICallback): Promise<void>;
     onQueuePositionChange(rid: string, cb: ICallback): Promise<void>;
+    onVisitorChange(rid: string, cb: ICallback): Promise<void>;
     notifyVisitorTyping(rid: string, username: string, typing: boolean): Promise<any>;
+    notifyCallDeclined(rid: string): Promise<any>;
     subscribe(topic: string, eventName: string): Promise<ISubscription>;
     subscribeRoom(rid: string): Promise<ISubscription[]>;
     onStreamData(event: string, cb: ICallback): Promise<any>;
diff --git a/node_modules/@rocket.chat/sdk/lib/clients/Livechat.js b/node_modules/@rocket.chat/sdk/lib/clients/Livechat.js
index fd1fa90..8716de7 100644
--- a/node_modules/@rocket.chat/sdk/lib/clients/Livechat.js
+++ b/node_modules/@rocket.chat/sdk/lib/clients/Livechat.js
@@ -264,6 +264,26 @@ var LivechatClient = /** @class */ (function (_super) {
             });
         });
     };
+    LivechatClient.prototype.onVisitorChange = function (rid, cb) {
+        return __awaiter(this, void 0, void 0, function () {
+            return __generator(this, function (_a) {
+                switch (_a.label) {
+                    case 0: return [4 /*yield*/, this.subscribe(this.livechatStream, rid)];
+                    case 1:
+                        _a.sent();
+                        return [4 /*yield*/, this.onStreamData(this.livechatStream, function (_a) {
+                                var _b = __read(_a.fields.args, 1), _c = _b[0], type = _c.type, visitor = _c.visitor;
+                                if (type === 'visitorData') {
+                                    cb(visitor);
+                                }
+                            })];
+                    case 2:
+                        _a.sent();
+                        return [2 /*return*/];
+                }
+            });
+        });
+    };
     LivechatClient.prototype.notifyVisitorTyping = function (rid, username, typing) {
         return __awaiter(this, void 0, void 0, function () {
             return __generator(this, function (_a) {
@@ -274,6 +294,16 @@ var LivechatClient = /** @class */ (function (_super) {
             });
         });
     };
+    LivechatClient.prototype.notifyCallDeclined = function (rid) {
+        return __awaiter(this, void 0, void 0, function () {
+            return __generator(this, function (_a) {
+                switch (_a.label) {
+                    case 0: return [4 /*yield*/, this.socket];
+                    case 1: return [2 /*return*/, (_a.sent()).notifyCallDeclined(rid)];
+                }
+            });
+        });
+    };
     LivechatClient.prototype.subscribe = function (topic, eventName) {
         return __awaiter(this, void 0, void 0, function () {
             var token;
diff --git a/node_modules/@rocket.chat/sdk/lib/clients/Livechat.js.map b/node_modules/@rocket.chat/sdk/lib/clients/Livechat.js.map
index 631fdd2..1468d75 100644
--- a/node_modules/@rocket.chat/sdk/lib/clients/Livechat.js.map
+++ b/node_modules/@rocket.chat/sdk/lib/clients/Livechat.js.map
@@ -1 +1 @@
-{"version":3,"file":"Livechat.js","sourceRoot":"","sources":["../../../src/lib/clients/Livechat.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n\t* @module LivechatDriver\n\t* Provides high-level helpers for Livechat connection, method calls, subscriptions.\n\t*/\nimport LivechatRest from '../api/Livechat'\nimport { ISocket, Protocols, IDriver } from '../drivers'\nimport { logger as Logger } from '../log'\nimport {\n\tILogger,\n\tISocketOptions,\n\tICallback,\n\tISubscription\n} from '../../interfaces'\n\nexport default class LivechatClient extends LivechatRest implements ISocket {\n  livechatStream: string = 'stream-livechat-room'\n  userId: string = ''\n  logger: ILogger = Logger\n  socket: Promise<ISocket | IDriver> = Promise.resolve() as any\n  constructor ({ logger, allPublic, rooms, integrationId, protocol = Protocols.DDP, ...config }: any) {\n    super({ logger, ...config })\n    this.import(protocol, config)\n  }\n  import (protocol: Protocols, config: any) {\n    switch (protocol) {\n      // case Protocols.MQTT:\n      //   this.socket = import(/* webpackChunkName: 'mqtttest' */ '../drivers/mqtt').then(({ MQTTDriver }) => new MQTTDriver({ logger: this.logger, ...config }))\n      //   break\n      case Protocols.DDP:\n        this.socket = import(/* webpackChunkName: 'ddptest' */ '../drivers/ddp').then(({ DDPDriver }) => new DDPDriver({ logger: this.logger, ...config }))\n        break\n      default:\n        throw new Error(`Invalid Protocol: ${protocol}, valids: ${Object.keys(Protocols).join()}`)\n    }\n  }\n  async connect (options: ISocketOptions, callback?: ICallback): Promise <any> {\n    return (await this.socket as ISocket).connect(options).then(() => (this.setUpConnection()))\n  }\n  async disconnect (): Promise<any> { return (await this.socket as ISocket).disconnect() }\n  async unsubscribe (subscription: ISubscription): Promise<any> { return (await this.socket as ISocket).unsubscribe(subscription) }\n  async unsubscribeAll (): Promise<any> { return (await this.socket as ISocket).unsubscribeAll() }\n  async subscribeNotifyAll (): Promise<any> { return (await this.socket as IDriver) .subscribeNotifyAll() }\n  async subscribeLoggedNotify (): Promise<any> { return (await this.socket as IDriver) .subscribeLoggedNotify() }\n  async subscribeNotifyUser (): Promise<any> { return (await this.socket as IDriver) .subscribeNotifyUser() }\n  async onMessage (cb: ICallback): Promise<any> { return (await this.socket as IDriver).onMessage(cb) }\n  async onTyping (cb: ICallback): Promise<any> { return (await this.socket as IDriver).onTyping(cb) }\n  async onAgentChange (rid: string, cb: ICallback) {\n    await this.subscribe(this.livechatStream, rid)\n    await this.onStreamData(this.livechatStream, ({ fields: { args: [{ type, data }] } }: any) => {\n      if (type === 'agentData') {\n        cb(data)\n      }\n    })\n  }\n  async onAgentStatusChange (rid: string, cb: ICallback) {\n    await this.subscribe(this.livechatStream, rid)\n    await this.onStreamData(this.livechatStream, ({ fields: { args: [{ type, status }] } }: any) => {\n      if (type === 'agentStatus') {\n        cb(status)\n      }\n    })\n  }\n\n  async onQueuePositionChange (rid: string, cb: ICallback) {\n    await this.subscribe(this.livechatStream, rid)\n    await this.onStreamData(this.livechatStream, ({ fields: { args: [{ type, data }] } }: any) => {\n      if (type === 'queueData') {\n        cb(data)\n      }\n    })\n  }\n\n  async notifyVisitorTyping (rid: string, username: string, typing: boolean) {\n    return (await this.socket as IDriver).notifyVisitorTyping(rid, username, typing, this.credentials.token)\n  }\n\n  async subscribe (topic: string, eventName: string) {\n    const { token } = this.credentials\n    return (await this.socket as ISocket).subscribe(topic, eventName, { token, visitorToken: token })\n  }\n\n  async subscribeRoom (rid: string) {\n    const { token } = this.credentials\n    return (await this.socket as IDriver).subscribeRoom(rid, { token, visitorToken: token })\n  }\n\n  async onStreamData (event: string, cb: ICallback): Promise<any> {\n    return (await this.socket as ISocket).onStreamData(event, cb)\n  }\n\n  async setUpConnection () {\n    const { token } = this.credentials\n    return (await this.socket as IDriver).methodCall('livechat:setUpConnection', { token })\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"Livechat.js","sourceRoot":"","sources":["../../../src/lib/clients/Livechat.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n\t* @module LivechatDriver\n\t* Provides high-level helpers for Livechat connection, method calls, subscriptions.\n\t*/\nimport LivechatRest from '../api/Livechat'\nimport { ISocket, Protocols, IDriver } from '../drivers'\nimport { logger as Logger } from '../log'\nimport {\n\tILogger,\n\tISocketOptions,\n\tICallback,\n\tISubscription\n} from '../../interfaces'\n\nexport default class LivechatClient extends LivechatRest implements ISocket {\n  livechatStream: string = 'stream-livechat-room'\n  userId: string = ''\n  logger: ILogger = Logger\n  socket: Promise<ISocket | IDriver> = Promise.resolve() as any\n  constructor ({ logger, allPublic, rooms, integrationId, protocol = Protocols.DDP, ...config }: any) {\n    super({ logger, ...config })\n    this.import(protocol, config)\n  }\n  import (protocol: Protocols, config: any) {\n    switch (protocol) {\n      // case Protocols.MQTT:\n      //   this.socket = import(/* webpackChunkName: 'mqtttest' */ '../drivers/mqtt').then(({ MQTTDriver }) => new MQTTDriver({ logger: this.logger, ...config }))\n      //   break\n      case Protocols.DDP:\n        this.socket = import(/* webpackChunkName: 'ddptest' */ '../drivers/ddp').then(({ DDPDriver }) => new DDPDriver({ logger: this.logger, ...config }))\n        break\n      default:\n        throw new Error(`Invalid Protocol: ${protocol}, valids: ${Object.keys(Protocols).join()}`)\n    }\n  }\n  async connect (options: ISocketOptions, callback?: ICallback): Promise <any> {\n    return (await this.socket as ISocket).connect(options).then(() => (this.setUpConnection()))\n  }\n  async disconnect (): Promise<any> { return (await this.socket as ISocket).disconnect() }\n  async unsubscribe (subscription: ISubscription): Promise<any> { return (await this.socket as ISocket).unsubscribe(subscription) }\n  async unsubscribeAll (): Promise<any> { return (await this.socket as ISocket).unsubscribeAll() }\n  async subscribeNotifyAll (): Promise<any> { return (await this.socket as IDriver) .subscribeNotifyAll() }\n  async subscribeLoggedNotify (): Promise<any> { return (await this.socket as IDriver) .subscribeLoggedNotify() }\n  async subscribeNotifyUser (): Promise<any> { return (await this.socket as IDriver) .subscribeNotifyUser() }\n  async onMessage (cb: ICallback): Promise<any> { return (await this.socket as IDriver).onMessage(cb) }\n  async onTyping (cb: ICallback): Promise<any> { return (await this.socket as IDriver).onTyping(cb) }\n  async onAgentChange (rid: string, cb: ICallback) {\n    await this.subscribe(this.livechatStream, rid)\n    await this.onStreamData(this.livechatStream, ({ fields: { args: [{ type, data }] } }: any) => {\n      if (type === 'agentData') {\n        cb(data)\n      }\n    })\n  }\n  async onAgentStatusChange (rid: string, cb: ICallback) {\n    await this.subscribe(this.livechatStream, rid)\n    await this.onStreamData(this.livechatStream, ({ fields: { args: [{ type, status }] } }: any) => {\n      if (type === 'agentStatus') {\n        cb(status)\n      }\n    })\n  }\n\n  async onQueuePositionChange (rid: string, cb: ICallback) {\n    await this.subscribe(this.livechatStream, rid)\n    await this.onStreamData(this.livechatStream, ({ fields: { args: [{ type, data }] } }: any) => {\n      if (type === 'queueData') {\n        cb(data)\n      }\n    })\n  }\n\n  async onVisitorChange (rid: string, cb: ICallback) {\n    await this.subscribe(this.livechatStream, rid)\n    await this.onStreamData(this.livechatStream, ({ fields: { args: [{ type, visitor }] } }: any) => {\n      if (type === 'visitorData') {\n        cb(visitor)\n      }\n    })\n  }\n\n  async notifyVisitorTyping (rid: string, username: string, typing: boolean) {\n    return (await this.socket as IDriver).notifyVisitorTyping(rid, username, typing, this.credentials.token)\n  }\n\n  async notifyCallDeclined (rid: string) {\n    return (await this.socket as IDriver).notifyCallDeclined(rid)\n  }\n\n  async subscribe (topic: string, eventName: string) {\n    const { token } = this.credentials\n    return (await this.socket as ISocket).subscribe(topic, eventName, { token, visitorToken: token })\n  }\n\n  async subscribeRoom (rid: string) {\n    const { token } = this.credentials\n    return (await this.socket as IDriver).subscribeRoom(rid, { token, visitorToken: token })\n  }\n\n  async onStreamData (event: string, cb: ICallback): Promise<any> {\n    return (await this.socket as ISocket).onStreamData(event, cb)\n  }\n\n  async setUpConnection () {\n    const { token } = this.credentials\n    return (await this.socket as IDriver).methodCall('livechat:setUpConnection', { token })\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@rocket.chat/sdk/lib/drivers/ddp.d.ts b/node_modules/@rocket.chat/sdk/lib/drivers/ddp.d.ts
index 4a2cc4d..4666abd 100644
--- a/node_modules/@rocket.chat/sdk/lib/drivers/ddp.d.ts
+++ b/node_modules/@rocket.chat/sdk/lib/drivers/ddp.d.ts
@@ -170,6 +170,7 @@ export declare class DDPDriver extends EventEmitter implements ISocket, IDriver
     onMessage: (cb: ICallback) => void;
     onTyping: (cb: ICallback) => Promise<any>;
     notifyVisitorTyping: (rid: string, username: string, typing: boolean, token: string) => Promise<any>;
+    notifyCallDeclined: (rid: string) => Promise<any>;
     ejsonMessage: (message: any) => any;
     methodCall: (method: string, ...args: any[]) => Promise<any>;
 }
diff --git a/node_modules/@rocket.chat/sdk/lib/drivers/ddp.js b/node_modules/@rocket.chat/sdk/lib/drivers/ddp.js
index 8f04ff1..46188be 100644
--- a/node_modules/@rocket.chat/sdk/lib/drivers/ddp.js
+++ b/node_modules/@rocket.chat/sdk/lib/drivers/ddp.js
@@ -690,6 +690,9 @@ var DDPDriver = /** @class */ (function (_super) {
         _this.notifyVisitorTyping = function (rid, username, typing, token) {
             return _this.ddp.call('stream-notify-room', rid + "/typing", username, typing, { token: token });
         };
+        _this.notifyCallDeclined = function (rid) {
+            return _this.ddp.call('stream-notify-room', rid + "/webrtc", 'callStatus', { callStatus: 'declined' });
+        };
         _this.ejsonMessage = function (message) {
             if (message.ts) {
                 message.ts = new Date(message.ts.$date);
diff --git a/node_modules/@rocket.chat/sdk/lib/drivers/ddp.js.map b/node_modules/@rocket.chat/sdk/lib/drivers/ddp.js.map
index b8339d7..f269cf5 100644
--- a/node_modules/@rocket.chat/sdk/lib/drivers/ddp.js.map
+++ b/node_modules/@rocket.chat/sdk/lib/drivers/ddp.js.map
@@ -1 +1 @@
-{"version":3,"file":"ddp.js","sourceRoot":"","sources":["../../../src/lib/drivers/ddp.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module DDPDriver\n * Handles low-level websocket ddp connections and event subscriptions\n */\n\nimport WebSocket from 'universal-websocket-client'\nimport { EventEmitter } from 'tiny-events'\n\nimport { logger as Logger } from '../log'\nimport { ISocket, IDriver } from './index'\n\nEventEmitter.prototype.removeAllListeners = function (event?: string | any): any {\n  if (event) {\n    this._listeners[event] = []\n  } else {\n    this._listeners = {}\n  }\n  return [] as any\n}\n\nimport {\n  ISocketOptions,\n  ISocketMessageHandler,\n  ISubscription,\n  ICredentials,\n  ILoginResult,\n  ICredentialsPass,\n  isLoginPass,\n  ICredentialsOAuth,\n  isLoginOAuth,\n  ICredentialsAuthenticated,\n  isLoginAuthenticated,\n  isLoginResult,\n  ISocketMessageCallback,\n\tICallback,\n\tILogger\n} from '../../interfaces'\n\nimport { hostToWS } from '../util'\nimport { sha256 } from 'js-sha256'\n\n/** Websocket handler class, manages connections and subscriptions by DDP */\nexport class Socket extends EventEmitter {\n  sent = 0\n  host: string\n  lastPing = Date.now()\n  subscriptions: { [id: string]: ISubscription } = {}\n  handlers: ISocketMessageHandler[] = []\n  config: ISocketOptions | any\n  openTimeout?: NodeJS.Timer | number\n  reopenInterval?: NodeJS.Timer\n  pingTimeout?: NodeJS.Timer | number\n  connection?: WebSocket\n  session?: string\n  logger: ILogger\n\n  /** Create a websocket handler */\n  constructor (\n    options?: ISocketOptions | any,\n    public resume: ILoginResult | null = null\n  ) {\n    super()\n    this.logger = options.logger || Logger\n    this.config = {\n      host: options.host || 'http://localhost:3000',\n      useSsl: options.useSsl || false,\n      reopen: options.reopen || 10000,\n      ping: options.timeout || 30000\n    }\n\n    this.host = `${hostToWS(this.config.host, this.config.useSsl)}/websocket`\n\n    this.on('ping', () => {\n      this.send({ msg: 'pong' }).then(this.logger.debug, this.logger.error)\n    })\n\n    this.on('result', (data: any) => this.emit(data.id, { id: data.id, result: data.result, error: data.error }))\n    this.on('ready', (data: any) => this.emit(data.subs[0], data))\n  }\n\n  /**\n   * Open websocket connection, with optional retry interval.\n   * Stores connection, setting up handlers for open/close/message events.\n   * Resumes login if given token.\n   */\n  open = (ms: number = this.config.reopen) => {\n    return new Promise(async (resolve, reject) => {\n      let connection: WebSocket\n      this.lastPing = Date.now()\n      await this.close()\n      if (this.reopenInterval) clearInterval(this.reopenInterval)\n      this.reopenInterval = setInterval(() => {\n        return !this.alive() && this.reopen()\n      }, ms)\n      try {\n        connection = new WebSocket(this.host)\n        connection.onerror = reject\n      } catch (err) {\n        this.logger.error(err)\n        return reject(err)\n      }\n      this.connection = connection\n      this.connection.onmessage = this.onMessage.bind(this)\n      this.connection.onclose = this.onClose.bind(this)\n      this.connection.onopen = this.onOpen.bind(this, resolve)\n    })\n  }\n\n  /** Send handshake message to confirm connection, start pinging. */\n  onOpen = async (callback: Function) => {\n    const connected = await this.send({\n      msg: 'connect',\n      version: '1',\n      support: ['1', 'pre2', 'pre1']\n    })\n    this.session = connected.session\n    this.ping().catch((err) => this.logger.error(`[ddp] Unable to ping server: ${err.message}`))\n    this.emit('open')\n    if (this.resume) await this.login(this.resume)\n    return callback(this.connection)\n  }\n\n  /** Emit close event so it can be used for promise resolve in close() */\n  onClose = (e: any) => {\n    try {\n      this.emit('close', e)\n      if (e.code !== 1000) {\n        return this.reopen()\n      } else {\n        if (this.reopenInterval) clearInterval(this.reopenInterval)\n        this.openTimeout && clearTimeout(this.openTimeout as any)\n        this.pingTimeout && clearTimeout(this.pingTimeout as any)\n        delete this.connection\n      }\n      this.logger.info(`[ddp] Close (${e.code}) ${e.reason}`)\n\n    } catch (error) {\n      this.logger.error(error)\n    }\n  }\n\n  /**\n   * Find and call matching handlers for incoming message data.\n   * Handlers match on collection, id and/or msg attribute in that order.\n   * Any matched handlers are removed once called.\n   * All collection events are emitted with their `msg` as the event name.\n   */\n  onMessage = (e: any) => {\n    this.lastPing = Date.now()\n    void this.ping()\n    const data = (e.data) ? JSON.parse(e.data) : undefined\n    this.logger.debug(data) // 👈  very useful for debugging missing responses\n    if (!data) return this.logger.error(`[ddp] JSON parse error: ${e.message}`)\n    this.logger.debug(`[ddp] messages received: ${e.data}`)\n    if (data.collection) this.emit(data.collection, data)\n    if (data.msg) this.emit(data.msg, data)\n  }\n\n  /** Disconnect the DDP from server and clear all subscriptions. */\n  close = async () => {\n    if (this.connected) {\n      this.unsubscribeAll().catch(e => this.logger.debug(e))\n      await new Promise((resolve) => {\n        if (this.connection) {\n          this.once('close', resolve)\n          this.connection.close(1000, 'disconnect')\n          return\n        }\n      })\n      .catch(this.logger.error)\n    }\n    return Promise.resolve()\n  }\n\n  /** Clear connection and try to connect again. */\n  reopen = async () => {\n    if (this.openTimeout) return\n    await this.close()\n    this.openTimeout = setTimeout(async () => {\n      delete this.openTimeout\n      await this.open()\n        .catch((err) => this.logger.error(`[ddp] Reopen error: ${err.message}`))\n    }, this.config.reopen)\n  }\n\n  /** Check if websocket connected and ready. */\n  get connected () {\n    return !!(\n      this.connection &&\n      this.connection.readyState === 1 &&\n      this.alive()\n    )\n  }\n\n  /** Check if connected and logged in */\n  get loggedIn () {\n    return (this.connected && !!this.resume)\n  }\n\n  /**\n   * Send an object to the server via Socket. Adds handler to collection to\n   * allow awaiting response matching an expected object. Most responses are\n   * identified by their message event name and the ID they were sent with, but\n   * some responses don't return the ID fallback to just matching on event name.\n   * Data often includes an error attribute if something went wrong, but certain\n   * types of calls send back a different `msg` value instead, e.g. `nosub`.\n   * @param obj       Object to be sent\n   * @param msg       The `data.msg` value to wait for in response\n   * @param errorMsg  An alternate `data.msg` value indicating an error response\n   */\n  send = async (obj: any): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      if (!this.connection) throw new Error('[ddp] sending without open connection')\n      const id = obj.id || `ddp-${ this.sent }`\n      this.sent += 1\n      const data = { ...obj, ...(/connect|ping|pong/.test(obj.msg) ? {} : { id }) }\n      const stringdata = JSON.stringify(data)\n      this.logger.debug(`[ddp] sending message: ${stringdata}`)\n      this.connection.send(stringdata)\n\n      this.once('disconnected', reject)\n      const listener = (data.msg === 'ping' && 'pong') || (data.msg === 'connect' && 'connected') || data.id\n      if (!listener) {\n        return resolve()\n      }\n      this.once(listener, (result: any) => {\n        this.off('disconnect', reject)\n        return (result.error ? reject(result.error) : resolve({ ...(/connect|ping|pong/.test(obj.msg) ? {} : { id }) , ...result }))\n      })\n    })\n  }\n\n  /** Send ping, record time, re-open if nothing comes back, repeat */\n  ping = async () => {\n    this.pingTimeout && clearTimeout(this.pingTimeout as any)\n    this.pingTimeout = setTimeout(() => {\n      this.send({ msg: 'ping' })\n        .then(() => {\n          return this.ping()\n        })\n        .catch(() => this.reopen())\n    }, this.config.ping)\n  }\n  /** Check if ping-pong to server is within tolerance of 1 missed ping */\n  alive = () => {\n    if (!this.lastPing) return false\n    return (Date.now() - this.lastPing <= this.config.ping * 2)\n  }\n\n  /**\n   * Calls a method on the server and returns a promise resolved\n   * with the result of the method.\n   * @param method    The name of the method to be called\n   * @param params    An array with the parameters to be sent\n   */\n  call = async (method: string, ...params: any[]) => {\n    const response = await this.send({ msg: 'method', method, params })\n      .catch((err) => {\n        this.logger.error(`[ddp] Call error: ${err.message}`)\n        throw err\n      })\n    return (response.result) ? response.result : response\n  }\n\n  /**\n   * Login to server and resubscribe to all subs, resolve with user information.\n   * @param credentials User credentials (username/password, oauth or token)\n   */\n  login = async (credentials: any) => {\n    const params = this.loginParams(credentials)\n    this.resume = (await this.call('login', params) as ILoginResult)\n    await this.subscribeAll()\n    this.emit('login', this.resume)\n    return this.resume\n  }\n\n  /** Take variety of login credentials object types for accepted params */\n  loginParams = (\n    credentials:\n      ICredentialsPass |\n      ICredentialsOAuth |\n      ICredentialsAuthenticated |\n      ILoginResult |\n      ICredentials\n  ) => {\n    if (\n      isLoginPass(credentials) ||\n      isLoginOAuth(credentials) ||\n      isLoginAuthenticated(credentials)\n    ) {\n      return credentials\n    }\n    if (isLoginResult(credentials)) {\n      const params: ICredentialsAuthenticated = {\n        resume: credentials.token\n      }\n      return params\n    }\n    const params: ICredentialsPass = {\n      user: { username: credentials.username },\n      password: {\n        digest: sha256(credentials.password),\n        algorithm: 'sha-256'\n      }\n    }\n    return params\n  }\n\n  /** Logout the current User from the server via Socket. */\n  logout = () => {\n    this.resume = null\n    return this.unsubscribeAll()\n\t\t\t.then(() => this.call('logout'))\n  }\n\n  /** Register a callback to trigger on message events in subscription */\n  onEvent = (id: string, callback: ISocketMessageCallback) => {\n    this.on(id, callback)\n  }\n\n  /**\n   * Subscribe to a stream on server via socket and returns a promise resolved\n   * with the subscription object when the subscription is ready.\n   * @param name      Stream name to subscribe to\n   * @param params    Params sent to the subscription request\n   */\n  subscribe = (name: string, params: any[], callback ?: ISocketMessageCallback) => {\n    this.logger.info(`[ddp] Subscribe to ${name}, param: ${JSON.stringify(params)}`)\n    return this.send({ msg: 'sub', name, params })\n      .then((result) => {\n        const id = (result.subs) ? result.subs[0] : undefined\n        const unsubscribe = this.unsubscribe.bind(this, id)\n        const onEvent = this.onEvent.bind(this, name)\n        const subscription = { id, name, params, unsubscribe, onEvent }\n        if (callback) subscription.onEvent(callback)\n        this.subscriptions[id] = subscription\n        return subscription\n      })\n      .catch((err) => {\n        this.logger.error(`[ddp] Subscribe error: ${err.message}`)\n        throw err\n      })\n  }\n\n  /** Subscribe to all pre-configured streams (e.g. on login resume) */\n  subscribeAll = () => {\n    const subscriptions = Object.keys(this.subscriptions || {}).map((key) => {\n      const { name, params } = this.subscriptions[key]\n      return this.subscribe(name, params)\n    })\n    return Promise.all(subscriptions)\n  }\n\n  /** Unsubscribe to server stream, resolve with unsubscribe request result */\n  unsubscribe = (id: any) => {\n    if (!this.subscriptions[id]) return Promise.reject(id)\n    delete this.subscriptions[id]\n    return this.send({ msg: 'unsub', id })\n      .then((data: any) => data.result || data.subs)\n      .catch((err) => {\n        if (!err.msg && err.msg !== 'nosub') {\n          this.logger.error(`[ddp] Unsubscribe error: ${err.message}`)\n          throw err\n        }\n      })\n  }\n\n  /** Unsubscribe from all active subscriptions and reset collection */\n  unsubscribeAll = () => {\n    const unsubAll = Object.keys(this.subscriptions).map((id) => {\n      return this.subscriptions[id].unsubscribe()\n    })\n    return Promise.all(unsubAll)\n      .then(() => this.subscriptions = {})\n  }\n}\n\nexport class DDPDriver extends EventEmitter implements ISocket, IDriver {\n  logger: ILogger\n  config: ISocketOptions\n\t/**\n\t * Event Emitter for listening to connection (echoes selection of DDP events)\n\t * @example\n\t *  import { driver } from '@rocket.chat/sdk'\n\t *  driver.connect()\n\t *  driver.events.on('connected', () => console.log('driver connected'))\n\t */\n\t// events = new EventEmitter()\n\n\t/**\n\t * An Websocket instance for interacting with Rocket.Chat.\n\t * Variable not initialised until `connect` called.\n\t */\n  ddp: Socket\n\n\t/**\n\t * Websocket subscriptions, exported for direct polling by adapters\n\t * Variable not initialised until `prepMeteorSubscriptions` called.\n\t * @deprecated Use `ddp.Socket` instance subscriptions instead.\n\t */\n  subscriptions: { [id: string]: ISubscription } = {}\n\n\t/** Save messages subscription to ensure only one created */\n  messages: ISubscription | undefined\n\n\t/** Current user object populated from resolved login */\n  userId: string = ''\n\n\t/** Array of joined room IDs (for reactive queries) */\n  joinedIds: string[] = []\n\n  constructor ({ host = 'localhost:3000', integrationId, config, logger = Logger, ...moreConfigs }: any = {}) {\n    super()\n\n    this.config = {\n      ...config,\n      ...moreConfigs,\n      host: host.replace(/(^\\w+:|^)\\/\\//, ''),\n      timeout: 20000\n\t\t\t// reopen: number\n\t\t\t// ping: number\n\t\t\t// close: number\n\t\t\t// integration: string\n    }\n    this.ddp = new Socket({ ...this.config, logger })\n    this.logger = logger\n  }\n\n\t/**\n\t * Initialise socket instance with given options or defaults.\n\t * Proxies the DDP module socket connection. Resolves with socket when open.\n\t * Accepts callback following error-first-pattern.\n\t * Error returned or promise rejected on timeout.\n\t * @example <caption>Using promise</caption>\n\t *  import { driver } from '@rocket.chat/sdk'\n\t *  driver.connect()\n\t *    .then(() => console.log('connected'))\n\t *    .catch((err) => console.error(err))\n\t */\n  connect = (c: any = {}): Promise<any> => {\n    if (this.connected) {\n      return Promise.resolve(this)\n    }\n    const config: ISocketOptions = { ...this.config, ...c } // override defaults\n\n    return new Promise((resolve, reject) => {\n      this.logger.info('[driver] Connecting', config)\n      this.subscriptions = this.ddp.subscriptions\n      this.ddp.open().catch((err: Error) => {\n        this.logger.error(`[driver] Failed to connect: ${err.message}`)\n        reject(err)\n      })\n\n      this.ddp.on('open', () => this.emit('connected')) // echo ddp event\n\n      let cancelled = false\n      const rejectionTimeout = setTimeout(() => {\n        this.logger.info(`[driver] Timeout (${config.timeout})`)\n        const err = new Error('Socket connection timeout')\n        cancelled = true\n        this.ddp.removeAllListeners('connected')\n        reject(err)\n      }, config.timeout)\n\n\t\t\t// if to avoid condition where timeout happens before listener to 'connected' is added\n\t\t\t// and this listener is not removed (because it was added after the removal)\n      if (!cancelled) {\n        this.once('connected', () => {\n          this.logger.info('[driver] Connected')\n          if (cancelled) return this.ddp.close() // cancel if already rejected\n          clearTimeout(rejectionTimeout)\n          resolve(this as IDriver)\n        })\n      }\n    })\n  }\n\n  get connected (): boolean {\n    return !!this.ddp.connected\n  }\n\n  disconnect = (): Promise<any> => {\n    return this.ddp.close()\n  }\n\n  subscribe = (topic: string, eventname: string, ...args: any[]): Promise<ISubscription> => {\n    this.logger.info(`[DDP driver] Subscribing to ${topic} | ${JSON.stringify(args)}`)\n    return this.ddp.subscribe(topic, [eventname, { 'useCollection': false, 'args': args }])\n  }\n\n  subscribeNotifyAll = (): Promise< any> => {\n    const topic = 'stream-notify-all'\n    return Promise.all([\n      'roles-change',\n      'updateEmojiCustom',\n      'deleteEmojiCustom',\n      'updateAvatar',\n      'public-settings-changed',\n      'permissions-changed'\n    ].map(event => this.subscribe(topic, event, false)))\n  }\n\n  subscribeLoggedNotify = (): Promise<any> => {\n    const topic = 'stream-notify-logged'\n    return Promise.all([\n      'Users:NameChanged',\n      'Users:Deleted',\n      'updateAvatar',\n      'updateEmojiCustom',\n      'deleteEmojiCustom',\n      'roles-change'\n    ].map(event => this.subscribe(topic, event, false)))\n  }\n\n  subscribeNotifyUser = (): Promise<any> => {\n    const topic = 'stream-notify-user'\n    return Promise.all([\n      'message',\n      'otr',\n      'webrtc',\n      'notification',\n      'rooms-changed',\n      'subscriptions-changed',\n      'uiInteraction'\n    ].map(event => this.subscribe(topic, `${this.userId}/${event}`, false)))\n  }\n\n  subscribeRoom = (rid: string, ...args: any[]): Promise<ISubscription[]> => {\n    const topic = 'stream-notify-room'\n    return Promise.all([\n      this.subscribe('stream-room-messages', rid, ...args),\n      this.subscribe(topic, `${rid}/typing`, ...args),\n      this.subscribe(topic, `${rid}/deleteMessage`, ...args)\n    ])\n  }\n\n\t/** Login to Rocket.Chat via DDP */\n  login = async (credentials: ICredentials, args: any): Promise<any> => {\n    if (!this.ddp || !this.ddp.connected) {\n      await this.connect()\n    }\n    this.logger.info(`[DDP driver] Login with ${JSON.stringify(credentials)}`)\n    const login: ILoginResult = await this.ddp.login(credentials)\n    this.userId = login.id\n    return login\n  }\n  logout = async () => {\n    if (this.ddp && this.ddp.connected) {\n      await this.ddp.logout()\n    }\n\n  }\n\t/** Unsubscribe from Meteor stream. Proxy for socket unsubscribe. */\n  unsubscribe = (subscription: ISubscription) => {\n    return this.ddp.unsubscribe(subscription.id)\n  }\n\n\t/** Unsubscribe from all subscriptions. Proxy for socket unsubscribeAll */\n  unsubscribeAll = (): Promise<any> => {\n    return this.ddp.unsubscribeAll()\n  }\n\n  onStreamData = (event: string, cb: ICallback): Promise<any> => {\n    function listener (message: any) {\n      cb((message))\n    }\n    return Promise.resolve(this.ddp.on(event, listener))\n      .then(() => ({\n        stop: () => this.ddp.off(event, listener)\n      }))\n  }\n\n  onMessage = (cb: ICallback): void => {\n    this.ddp.on('stream-room-messages', ({ fields: { args: [message] } }: any) => cb(this.ejsonMessage(message)))\n  }\n\n  onTyping = (cb: ICallback): Promise<any > => {\n    return this.ddp.on('stream-notify-room', ({ fields: { args: [username, isTyping] } }: any) => {\n      cb(username, isTyping)\n    }) as any\n  }\n\n  notifyVisitorTyping = (rid: string, username: string, typing: boolean, token: string) => {\n    return this.ddp.call('stream-notify-room', `${ rid }/typing`, username, typing, { token })\n  }\n\n  ejsonMessage = (message: any) => {\n    if (message.ts) {\n      message.ts = new Date(message.ts.$date)\n    }\n    return message\n  }\n\n  methodCall = (method: string, ...args: any[]): Promise<any> => {\n    return this.ddp.call(method, ...args)\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"ddp.js","sourceRoot":"","sources":["../../../src/lib/drivers/ddp.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module DDPDriver\n * Handles low-level websocket ddp connections and event subscriptions\n */\n\nimport WebSocket from 'universal-websocket-client'\nimport { EventEmitter } from 'tiny-events'\n\nimport { logger as Logger } from '../log'\nimport { ISocket, IDriver } from './index'\n\nEventEmitter.prototype.removeAllListeners = function (event?: string | any): any {\n  if (event) {\n    this._listeners[event] = []\n  } else {\n    this._listeners = {}\n  }\n  return [] as any\n}\n\nimport {\n  ISocketOptions,\n  ISocketMessageHandler,\n  ISubscription,\n  ICredentials,\n  ILoginResult,\n  ICredentialsPass,\n  isLoginPass,\n  ICredentialsOAuth,\n  isLoginOAuth,\n  ICredentialsAuthenticated,\n  isLoginAuthenticated,\n  isLoginResult,\n  ISocketMessageCallback,\n\tICallback,\n\tILogger\n} from '../../interfaces'\n\nimport { hostToWS } from '../util'\nimport { sha256 } from 'js-sha256'\n\n/** Websocket handler class, manages connections and subscriptions by DDP */\nexport class Socket extends EventEmitter {\n  sent = 0\n  host: string\n  lastPing = Date.now()\n  subscriptions: { [id: string]: ISubscription } = {}\n  handlers: ISocketMessageHandler[] = []\n  config: ISocketOptions | any\n  openTimeout?: NodeJS.Timer | number\n  reopenInterval?: NodeJS.Timer\n  pingTimeout?: NodeJS.Timer | number\n  connection?: WebSocket\n  session?: string\n  logger: ILogger\n\n  /** Create a websocket handler */\n  constructor (\n    options?: ISocketOptions | any,\n    public resume: ILoginResult | null = null\n  ) {\n    super()\n    this.logger = options.logger || Logger\n    this.config = {\n      host: options.host || 'http://localhost:3000',\n      useSsl: options.useSsl || false,\n      reopen: options.reopen || 10000,\n      ping: options.timeout || 30000\n    }\n\n    this.host = `${hostToWS(this.config.host, this.config.useSsl)}/websocket`\n\n    this.on('ping', () => {\n      this.send({ msg: 'pong' }).then(this.logger.debug, this.logger.error)\n    })\n\n    this.on('result', (data: any) => this.emit(data.id, { id: data.id, result: data.result, error: data.error }))\n    this.on('ready', (data: any) => this.emit(data.subs[0], data))\n  }\n\n  /**\n   * Open websocket connection, with optional retry interval.\n   * Stores connection, setting up handlers for open/close/message events.\n   * Resumes login if given token.\n   */\n  open = (ms: number = this.config.reopen) => {\n    return new Promise(async (resolve, reject) => {\n      let connection: WebSocket\n      this.lastPing = Date.now()\n      await this.close()\n      if (this.reopenInterval) clearInterval(this.reopenInterval)\n      this.reopenInterval = setInterval(() => {\n        return !this.alive() && this.reopen()\n      }, ms)\n      try {\n        connection = new WebSocket(this.host)\n        connection.onerror = reject\n      } catch (err) {\n        this.logger.error(err)\n        return reject(err)\n      }\n      this.connection = connection\n      this.connection.onmessage = this.onMessage.bind(this)\n      this.connection.onclose = this.onClose.bind(this)\n      this.connection.onopen = this.onOpen.bind(this, resolve)\n    })\n  }\n\n  /** Send handshake message to confirm connection, start pinging. */\n  onOpen = async (callback: Function) => {\n    const connected = await this.send({\n      msg: 'connect',\n      version: '1',\n      support: ['1', 'pre2', 'pre1']\n    })\n    this.session = connected.session\n    this.ping().catch((err) => this.logger.error(`[ddp] Unable to ping server: ${err.message}`))\n    this.emit('open')\n    if (this.resume) await this.login(this.resume)\n    return callback(this.connection)\n  }\n\n  /** Emit close event so it can be used for promise resolve in close() */\n  onClose = (e: any) => {\n    try {\n      this.emit('close', e)\n      if (e.code !== 1000) {\n        return this.reopen()\n      } else {\n        if (this.reopenInterval) clearInterval(this.reopenInterval)\n        this.openTimeout && clearTimeout(this.openTimeout as any)\n        this.pingTimeout && clearTimeout(this.pingTimeout as any)\n        delete this.connection\n      }\n      this.logger.info(`[ddp] Close (${e.code}) ${e.reason}`)\n\n    } catch (error) {\n      this.logger.error(error)\n    }\n  }\n\n  /**\n   * Find and call matching handlers for incoming message data.\n   * Handlers match on collection, id and/or msg attribute in that order.\n   * Any matched handlers are removed once called.\n   * All collection events are emitted with their `msg` as the event name.\n   */\n  onMessage = (e: any) => {\n    this.lastPing = Date.now()\n    void this.ping()\n    const data = (e.data) ? JSON.parse(e.data) : undefined\n    this.logger.debug(data) // 👈  very useful for debugging missing responses\n    if (!data) return this.logger.error(`[ddp] JSON parse error: ${e.message}`)\n    this.logger.debug(`[ddp] messages received: ${e.data}`)\n    if (data.collection) this.emit(data.collection, data)\n    if (data.msg) this.emit(data.msg, data)\n  }\n\n  /** Disconnect the DDP from server and clear all subscriptions. */\n  close = async () => {\n    if (this.connected) {\n      this.unsubscribeAll().catch(e => this.logger.debug(e))\n      await new Promise((resolve) => {\n        if (this.connection) {\n          this.once('close', resolve)\n          this.connection.close(1000, 'disconnect')\n          return\n        }\n      })\n      .catch(this.logger.error)\n    }\n    return Promise.resolve()\n  }\n\n  /** Clear connection and try to connect again. */\n  reopen = async () => {\n    if (this.openTimeout) return\n    await this.close()\n    this.openTimeout = setTimeout(async () => {\n      delete this.openTimeout\n      await this.open()\n        .catch((err) => this.logger.error(`[ddp] Reopen error: ${err.message}`))\n    }, this.config.reopen)\n  }\n\n  /** Check if websocket connected and ready. */\n  get connected () {\n    return !!(\n      this.connection &&\n      this.connection.readyState === 1 &&\n      this.alive()\n    )\n  }\n\n  /** Check if connected and logged in */\n  get loggedIn () {\n    return (this.connected && !!this.resume)\n  }\n\n  /**\n   * Send an object to the server via Socket. Adds handler to collection to\n   * allow awaiting response matching an expected object. Most responses are\n   * identified by their message event name and the ID they were sent with, but\n   * some responses don't return the ID fallback to just matching on event name.\n   * Data often includes an error attribute if something went wrong, but certain\n   * types of calls send back a different `msg` value instead, e.g. `nosub`.\n   * @param obj       Object to be sent\n   * @param msg       The `data.msg` value to wait for in response\n   * @param errorMsg  An alternate `data.msg` value indicating an error response\n   */\n  send = async (obj: any): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      if (!this.connection) throw new Error('[ddp] sending without open connection')\n      const id = obj.id || `ddp-${ this.sent }`\n      this.sent += 1\n      const data = { ...obj, ...(/connect|ping|pong/.test(obj.msg) ? {} : { id }) }\n      const stringdata = JSON.stringify(data)\n      this.logger.debug(`[ddp] sending message: ${stringdata}`)\n      this.connection.send(stringdata)\n\n      this.once('disconnected', reject)\n      const listener = (data.msg === 'ping' && 'pong') || (data.msg === 'connect' && 'connected') || data.id\n      if (!listener) {\n        return resolve()\n      }\n      this.once(listener, (result: any) => {\n        this.off('disconnect', reject)\n        return (result.error ? reject(result.error) : resolve({ ...(/connect|ping|pong/.test(obj.msg) ? {} : { id }) , ...result }))\n      })\n    })\n  }\n\n  /** Send ping, record time, re-open if nothing comes back, repeat */\n  ping = async () => {\n    this.pingTimeout && clearTimeout(this.pingTimeout as any)\n    this.pingTimeout = setTimeout(() => {\n      this.send({ msg: 'ping' })\n        .then(() => {\n          return this.ping()\n        })\n        .catch(() => this.reopen())\n    }, this.config.ping)\n  }\n  /** Check if ping-pong to server is within tolerance of 1 missed ping */\n  alive = () => {\n    if (!this.lastPing) return false\n    return (Date.now() - this.lastPing <= this.config.ping * 2)\n  }\n\n  /**\n   * Calls a method on the server and returns a promise resolved\n   * with the result of the method.\n   * @param method    The name of the method to be called\n   * @param params    An array with the parameters to be sent\n   */\n  call = async (method: string, ...params: any[]) => {\n    const response = await this.send({ msg: 'method', method, params })\n      .catch((err) => {\n        this.logger.error(`[ddp] Call error: ${err.message}`)\n        throw err\n      })\n    return (response.result) ? response.result : response\n  }\n\n  /**\n   * Login to server and resubscribe to all subs, resolve with user information.\n   * @param credentials User credentials (username/password, oauth or token)\n   */\n  login = async (credentials: any) => {\n    const params = this.loginParams(credentials)\n    this.resume = (await this.call('login', params) as ILoginResult)\n    await this.subscribeAll()\n    this.emit('login', this.resume)\n    return this.resume\n  }\n\n  /** Take variety of login credentials object types for accepted params */\n  loginParams = (\n    credentials:\n      ICredentialsPass |\n      ICredentialsOAuth |\n      ICredentialsAuthenticated |\n      ILoginResult |\n      ICredentials\n  ) => {\n    if (\n      isLoginPass(credentials) ||\n      isLoginOAuth(credentials) ||\n      isLoginAuthenticated(credentials)\n    ) {\n      return credentials\n    }\n    if (isLoginResult(credentials)) {\n      const params: ICredentialsAuthenticated = {\n        resume: credentials.token\n      }\n      return params\n    }\n    const params: ICredentialsPass = {\n      user: { username: credentials.username },\n      password: {\n        digest: sha256(credentials.password),\n        algorithm: 'sha-256'\n      }\n    }\n    return params\n  }\n\n  /** Logout the current User from the server via Socket. */\n  logout = () => {\n    this.resume = null\n    return this.unsubscribeAll()\n\t\t\t.then(() => this.call('logout'))\n  }\n\n  /** Register a callback to trigger on message events in subscription */\n  onEvent = (id: string, callback: ISocketMessageCallback) => {\n    this.on(id, callback)\n  }\n\n  /**\n   * Subscribe to a stream on server via socket and returns a promise resolved\n   * with the subscription object when the subscription is ready.\n   * @param name      Stream name to subscribe to\n   * @param params    Params sent to the subscription request\n   */\n  subscribe = (name: string, params: any[], callback ?: ISocketMessageCallback) => {\n    this.logger.info(`[ddp] Subscribe to ${name}, param: ${JSON.stringify(params)}`)\n    return this.send({ msg: 'sub', name, params })\n      .then((result) => {\n        const id = (result.subs) ? result.subs[0] : undefined\n        const unsubscribe = this.unsubscribe.bind(this, id)\n        const onEvent = this.onEvent.bind(this, name)\n        const subscription = { id, name, params, unsubscribe, onEvent }\n        if (callback) subscription.onEvent(callback)\n        this.subscriptions[id] = subscription\n        return subscription\n      })\n      .catch((err) => {\n        this.logger.error(`[ddp] Subscribe error: ${err.message}`)\n        throw err\n      })\n  }\n\n  /** Subscribe to all pre-configured streams (e.g. on login resume) */\n  subscribeAll = () => {\n    const subscriptions = Object.keys(this.subscriptions || {}).map((key) => {\n      const { name, params } = this.subscriptions[key]\n      return this.subscribe(name, params)\n    })\n    return Promise.all(subscriptions)\n  }\n\n  /** Unsubscribe to server stream, resolve with unsubscribe request result */\n  unsubscribe = (id: any) => {\n    if (!this.subscriptions[id]) return Promise.reject(id)\n    delete this.subscriptions[id]\n    return this.send({ msg: 'unsub', id })\n      .then((data: any) => data.result || data.subs)\n      .catch((err) => {\n        if (!err.msg && err.msg !== 'nosub') {\n          this.logger.error(`[ddp] Unsubscribe error: ${err.message}`)\n          throw err\n        }\n      })\n  }\n\n  /** Unsubscribe from all active subscriptions and reset collection */\n  unsubscribeAll = () => {\n    const unsubAll = Object.keys(this.subscriptions).map((id) => {\n      return this.subscriptions[id].unsubscribe()\n    })\n    return Promise.all(unsubAll)\n      .then(() => this.subscriptions = {})\n  }\n}\n\nexport class DDPDriver extends EventEmitter implements ISocket, IDriver {\n  logger: ILogger\n  config: ISocketOptions\n\t/**\n\t * Event Emitter for listening to connection (echoes selection of DDP events)\n\t * @example\n\t *  import { driver } from '@rocket.chat/sdk'\n\t *  driver.connect()\n\t *  driver.events.on('connected', () => console.log('driver connected'))\n\t */\n\t// events = new EventEmitter()\n\n\t/**\n\t * An Websocket instance for interacting with Rocket.Chat.\n\t * Variable not initialised until `connect` called.\n\t */\n  ddp: Socket\n\n\t/**\n\t * Websocket subscriptions, exported for direct polling by adapters\n\t * Variable not initialised until `prepMeteorSubscriptions` called.\n\t * @deprecated Use `ddp.Socket` instance subscriptions instead.\n\t */\n  subscriptions: { [id: string]: ISubscription } = {}\n\n\t/** Save messages subscription to ensure only one created */\n  messages: ISubscription | undefined\n\n\t/** Current user object populated from resolved login */\n  userId: string = ''\n\n\t/** Array of joined room IDs (for reactive queries) */\n  joinedIds: string[] = []\n\n  constructor ({ host = 'localhost:3000', integrationId, config, logger = Logger, ...moreConfigs }: any = {}) {\n    super()\n\n    this.config = {\n      ...config,\n      ...moreConfigs,\n      host: host.replace(/(^\\w+:|^)\\/\\//, ''),\n      timeout: 20000\n\t\t\t// reopen: number\n\t\t\t// ping: number\n\t\t\t// close: number\n\t\t\t// integration: string\n    }\n    this.ddp = new Socket({ ...this.config, logger })\n    this.logger = logger\n  }\n\n\t/**\n\t * Initialise socket instance with given options or defaults.\n\t * Proxies the DDP module socket connection. Resolves with socket when open.\n\t * Accepts callback following error-first-pattern.\n\t * Error returned or promise rejected on timeout.\n\t * @example <caption>Using promise</caption>\n\t *  import { driver } from '@rocket.chat/sdk'\n\t *  driver.connect()\n\t *    .then(() => console.log('connected'))\n\t *    .catch((err) => console.error(err))\n\t */\n  connect = (c: any = {}): Promise<any> => {\n    if (this.connected) {\n      return Promise.resolve(this)\n    }\n    const config: ISocketOptions = { ...this.config, ...c } // override defaults\n\n    return new Promise((resolve, reject) => {\n      this.logger.info('[driver] Connecting', config)\n      this.subscriptions = this.ddp.subscriptions\n      this.ddp.open().catch((err: Error) => {\n        this.logger.error(`[driver] Failed to connect: ${err.message}`)\n        reject(err)\n      })\n\n      this.ddp.on('open', () => this.emit('connected')) // echo ddp event\n\n      let cancelled = false\n      const rejectionTimeout = setTimeout(() => {\n        this.logger.info(`[driver] Timeout (${config.timeout})`)\n        const err = new Error('Socket connection timeout')\n        cancelled = true\n        this.ddp.removeAllListeners('connected')\n        reject(err)\n      }, config.timeout)\n\n\t\t\t// if to avoid condition where timeout happens before listener to 'connected' is added\n\t\t\t// and this listener is not removed (because it was added after the removal)\n      if (!cancelled) {\n        this.once('connected', () => {\n          this.logger.info('[driver] Connected')\n          if (cancelled) return this.ddp.close() // cancel if already rejected\n          clearTimeout(rejectionTimeout)\n          resolve(this as IDriver)\n        })\n      }\n    })\n  }\n\n  get connected (): boolean {\n    return !!this.ddp.connected\n  }\n\n  disconnect = (): Promise<any> => {\n    return this.ddp.close()\n  }\n\n  subscribe = (topic: string, eventname: string, ...args: any[]): Promise<ISubscription> => {\n    this.logger.info(`[DDP driver] Subscribing to ${topic} | ${JSON.stringify(args)}`)\n    return this.ddp.subscribe(topic, [eventname, { 'useCollection': false, 'args': args }])\n  }\n\n  subscribeNotifyAll = (): Promise< any> => {\n    const topic = 'stream-notify-all'\n    return Promise.all([\n      'roles-change',\n      'updateEmojiCustom',\n      'deleteEmojiCustom',\n      'updateAvatar',\n      'public-settings-changed',\n      'permissions-changed'\n    ].map(event => this.subscribe(topic, event, false)))\n  }\n\n  subscribeLoggedNotify = (): Promise<any> => {\n    const topic = 'stream-notify-logged'\n    return Promise.all([\n      'Users:NameChanged',\n      'Users:Deleted',\n      'updateAvatar',\n      'updateEmojiCustom',\n      'deleteEmojiCustom',\n      'roles-change'\n    ].map(event => this.subscribe(topic, event, false)))\n  }\n\n  subscribeNotifyUser = (): Promise<any> => {\n    const topic = 'stream-notify-user'\n    return Promise.all([\n      'message',\n      'otr',\n      'webrtc',\n      'notification',\n      'rooms-changed',\n      'subscriptions-changed',\n      'uiInteraction'\n    ].map(event => this.subscribe(topic, `${this.userId}/${event}`, false)))\n  }\n\n  subscribeRoom = (rid: string, ...args: any[]): Promise<ISubscription[]> => {\n    const topic = 'stream-notify-room'\n    return Promise.all([\n      this.subscribe('stream-room-messages', rid, ...args),\n      this.subscribe(topic, `${rid}/typing`, ...args),\n      this.subscribe(topic, `${rid}/deleteMessage`, ...args)\n    ])\n  }\n\n\t/** Login to Rocket.Chat via DDP */\n  login = async (credentials: ICredentials, args: any): Promise<any> => {\n    if (!this.ddp || !this.ddp.connected) {\n      await this.connect()\n    }\n    this.logger.info(`[DDP driver] Login with ${JSON.stringify(credentials)}`)\n    const login: ILoginResult = await this.ddp.login(credentials)\n    this.userId = login.id\n    return login\n  }\n  logout = async () => {\n    if (this.ddp && this.ddp.connected) {\n      await this.ddp.logout()\n    }\n\n  }\n\t/** Unsubscribe from Meteor stream. Proxy for socket unsubscribe. */\n  unsubscribe = (subscription: ISubscription) => {\n    return this.ddp.unsubscribe(subscription.id)\n  }\n\n\t/** Unsubscribe from all subscriptions. Proxy for socket unsubscribeAll */\n  unsubscribeAll = (): Promise<any> => {\n    return this.ddp.unsubscribeAll()\n  }\n\n  onStreamData = (event: string, cb: ICallback): Promise<any> => {\n    function listener (message: any) {\n      cb((message))\n    }\n    return Promise.resolve(this.ddp.on(event, listener))\n      .then(() => ({\n        stop: () => this.ddp.off(event, listener)\n      }))\n  }\n\n  onMessage = (cb: ICallback): void => {\n    this.ddp.on('stream-room-messages', ({ fields: { args: [message] } }: any) => cb(this.ejsonMessage(message)))\n  }\n\n  onTyping = (cb: ICallback): Promise<any > => {\n    return this.ddp.on('stream-notify-room', ({ fields: { args: [username, isTyping] } }: any) => {\n      cb(username, isTyping)\n    }) as any\n  }\n\n  notifyVisitorTyping = (rid: string, username: string, typing: boolean, token: string) => {\n    return this.ddp.call('stream-notify-room', `${ rid }/typing`, username, typing, { token })\n  }\n\n  notifyCallDeclined = (rid: string) => {\n    return this.ddp.call('stream-notify-room', `${ rid }/webrtc`, 'callStatus', { callStatus: 'declined' })\n  }\n\n  ejsonMessage = (message: any) => {\n    if (message.ts) {\n      message.ts = new Date(message.ts.$date)\n    }\n    return message\n  }\n\n  methodCall = (method: string, ...args: any[]): Promise<any> => {\n    return this.ddp.call(method, ...args)\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@rocket.chat/sdk/lib/drivers/index.d.ts b/node_modules/@rocket.chat/sdk/lib/drivers/index.d.ts
index 7297df1..4c5d13f 100644
--- a/node_modules/@rocket.chat/sdk/lib/drivers/index.d.ts
+++ b/node_modules/@rocket.chat/sdk/lib/drivers/index.d.ts
@@ -31,6 +31,7 @@ export interface IDriver {
     subscribeNotifyUser(): Promise<IDriver>;
     onTyping(cb: ICallback): Promise<any>;
     notifyVisitorTyping(rid: string, username: string, typing: boolean, token: string): Promise<any>;
+    notifyCallDeclined(rid: string): Promise<any>;
     methodCall(method: string, ...args: any[]): Promise<any>;
 }
 export declare enum Protocols {
diff --git a/node_modules/@rocket.chat/sdk/lib/drivers/index.js.map b/node_modules/@rocket.chat/sdk/lib/drivers/index.js.map
index ba56af4..cc211b8 100644
--- a/node_modules/@rocket.chat/sdk/lib/drivers/index.js.map
+++ b/node_modules/@rocket.chat/sdk/lib/drivers/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/lib/drivers/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAqDH,IAAY,SAGX;AAHD,WAAY,SAAS;IACpB,0BAAa,CAAA;IACb,wBAAW,CAAA;AACZ,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB","sourcesContent":["/**\n * @module Socket\n * Provides high-level helpers for DDP connection, method calls, subscriptions.\n */\n\nimport { EventEmitter } from 'tiny-events'\nimport {\n  ILogger,\n  ISocketOptions,\n  ICallback,\n  ISubscription,\n  ICredentials\n} from '../../interfaces'\n\nexport interface ISocket {\n  logger: ILogger\n  connect (options: ISocketOptions): Promise<ISocket | IDriver>\n  disconnect (): Promise<ISocket>\n  subscribe (topic: string, ...args: any[]): Promise<ISubscription>\n  unsubscribe (subscription: ISubscription): Promise<ISocket>\n  unsubscribeAll (): Promise<ISocket>\n\n  onStreamData (event: string, cb: ICallback): Promise<any>\n\n  on (event: string, listener: Function): EventEmitter\n  once (event: string, listener: Function): EventEmitter\n  off (event?: string, listener?: Function): EventEmitter\n  emit (event: string, ...args: any[]): boolean\n  listeners (event: string): Function[]\n  removeAllListeners (event?: string): Function[]\n  hasListeners (event: string): boolean\n}\n\nexport interface IDriver {\n  config: any\n  login (credentials: ICredentials, args: any): Promise<any>\n\n  subscribeRoom (rid: string, ...args: any[]): Promise<ISubscription[]>\n\n  onMessage (cb: ICallback): void\n\n  subscribeNotifyAll (): Promise<any>\n\n  subscribeLoggedNotify (): Promise<any>\n\n  subscribeNotifyUser (): Promise<any>\n\n  subscribeNotifyUser (): Promise<IDriver>\n\n  onTyping (cb: ICallback): Promise<any>\n\n  notifyVisitorTyping (rid: string, username: string, typing: boolean, token: string): Promise<any>\n\n  methodCall (method: string, ...args: any[]): Promise<any>\n}\n\nexport enum Protocols {\n\tMQTT = 'mqtt',\n\tDDP = 'ddp'\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/lib/drivers/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAuDH,IAAY,SAGX;AAHD,WAAY,SAAS;IACpB,0BAAa,CAAA;IACb,wBAAW,CAAA;AACZ,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB","sourcesContent":["/**\n * @module Socket\n * Provides high-level helpers for DDP connection, method calls, subscriptions.\n */\n\nimport { EventEmitter } from 'tiny-events'\nimport {\n  ILogger,\n  ISocketOptions,\n  ICallback,\n  ISubscription,\n  ICredentials\n} from '../../interfaces'\n\nexport interface ISocket {\n  logger: ILogger\n  connect (options: ISocketOptions): Promise<ISocket | IDriver>\n  disconnect (): Promise<ISocket>\n  subscribe (topic: string, ...args: any[]): Promise<ISubscription>\n  unsubscribe (subscription: ISubscription): Promise<ISocket>\n  unsubscribeAll (): Promise<ISocket>\n\n  onStreamData (event: string, cb: ICallback): Promise<any>\n\n  on (event: string, listener: Function): EventEmitter\n  once (event: string, listener: Function): EventEmitter\n  off (event?: string, listener?: Function): EventEmitter\n  emit (event: string, ...args: any[]): boolean\n  listeners (event: string): Function[]\n  removeAllListeners (event?: string): Function[]\n  hasListeners (event: string): boolean\n}\n\nexport interface IDriver {\n  config: any\n  login (credentials: ICredentials, args: any): Promise<any>\n\n  subscribeRoom (rid: string, ...args: any[]): Promise<ISubscription[]>\n\n  onMessage (cb: ICallback): void\n\n  subscribeNotifyAll (): Promise<any>\n\n  subscribeLoggedNotify (): Promise<any>\n\n  subscribeNotifyUser (): Promise<any>\n\n  subscribeNotifyUser (): Promise<IDriver>\n\n  onTyping (cb: ICallback): Promise<any>\n\n  notifyVisitorTyping (rid: string, username: string, typing: boolean, token: string): Promise<any>\n  \n  notifyCallDeclined (rid: string): Promise<any>\n\n  methodCall (method: string, ...args: any[]): Promise<any>\n}\n\nexport enum Protocols {\n\tMQTT = 'mqtt',\n\tDDP = 'ddp'\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.d.ts b/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.d.ts
index 529dd56..3b75eae 100644
--- a/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.d.ts
+++ b/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.d.ts
@@ -19,6 +19,7 @@ export declare class MQTTDriver extends EventEmitter implements ISocket, IDriver
     onMessage(cb: ICallback): void;
     onTyping(cb: ICallback): Promise<any>;
     notifyVisitorTyping(rid: string, username: string, typing: boolean, token: string): Promise<any>;
+    notifyCallDeclined(rid: string): Promise<any>;
     onStreamData(name: string, cb: ICallback): Promise<any>;
     methodCall: (method: string, ...args: any[]) => Promise<any>;
 }
diff --git a/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.js b/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.js
index bad5635..290424d 100644
--- a/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.js
+++ b/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.js
@@ -219,6 +219,9 @@ var MQTTDriver = /** @class */ (function (_super) {
     MQTTDriver.prototype.notifyVisitorTyping = function (rid, username, typing, token) {
         return Promise.resolve();
     };
+    MQTTDriver.prototype.notifyCallDeclined = function (rid) {
+        return Promise.resolve();
+    };
     MQTTDriver.prototype.onStreamData = function (name, cb) {
         return Promise.resolve(this.on(name, function (_a) {
             var _b = __read(_a.fields.args, 1), message = _b[0];
diff --git a/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.js.map b/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.js.map
index f362c95..919f457 100644
--- a/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.js.map
+++ b/node_modules/@rocket.chat/sdk/lib/drivers/mqtt.js.map
@@ -1 +1 @@
-{"version":3,"file":"mqtt.js","sourceRoot":"","sources":["../../../src/lib/drivers/mqtt.ts"],"names":[],"mappings":"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","sourcesContent":["import { Client } from 'paho-mqtt/src/paho-mqtt'\nimport { EventEmitter } from 'tiny-events'\n\nimport { logger as Logger } from '../log'\nimport { ISocket, IDriver } from './index'\nimport msgpack from 'msgpack-lite'\nimport {\n\tILogger,\n\tISocketOptions,\n\tICallback,\n\tISubscription,\n\tICredentials\n} from '../../interfaces'\n\nexport class MQTTDriver extends EventEmitter implements ISocket, IDriver {\n  logger: ILogger\n  config: ISocketOptions\n  socket: any\n  constructor ({ host = 'localhost', path = '/', integrationId, config, logger = Logger, ...moreConfigs }: any) {\n    super()\n    host = 'localhost'\n    const [, _host = host, , port = 8081] = new RegExp('(.*?)(:([0-9]+))?$').exec(host || 'localhost:3000') || []\n    this.config = {\n      ...config,\n      ...moreConfigs,\n      host: _host.replace(/^http/, 'ws'),\n      timeout: 20000,\n      port: port\n\t\t\t// reopen: number\n\t\t\t// ping: number\n\t\t\t// close: number\n\t\t\t// integration: string\n    }\n\n    this.logger = logger\n\n    if (/https/.test(host)) {\n      this.socket = new Client(this.config.host + path, 'clientId')\n    } else {\n      this.socket = new Client((this.config.host || '').replace('http://', '').replace('ws://', ''), Number(port), path, 'clientId')\n    }\n    this.socket.onMessageArrived = ({ destinationName, payloadBytes }: any) => {\n      if (/room-message/.test(destinationName)) {\n        this.emit('message', { topic: destinationName, message: msgpack.decode(payloadBytes) })\n      }\n    }\n  }\n\n  connect (options: ISocketOptions): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.socket.connect({ userName: 'livechat-guest', password: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2Ijp7InZpc2l0b3JUb2tlbiI6ImFqamVvY2N5dXhweXVlOTg3YzJ0NnMifSwidXNlciI6eyJ2Ijp7InZpc2l0b3JUb2tlbiI6ImFqamVvY2N5dXhweXVlOTg3YzJ0NnMifX0sIm5hbWUiOiJKb2huIERvZSIsImlhdCI6MTUxNjIzOTAyMn0.RTQz72NTgI6qWgQMCNHHaSNS13sDK3cz--ss2_5vAz8'\t, onSuccess: resolve, onFailure: reject, useSSL: /https/.test(this.config.host || '') })\n    })\n  }\n  disconnect (): Promise<any> {\n    this.socket.end()\n    return Promise.resolve(this.socket)\n  }\n\n  subscribe (topic: string, { qos = 0 }: any): Promise<ISubscription> {\n    return new Promise((resolve, reject) => {\n      this.socket.subscribe(topic, { qos, onFailure: (...args: any[]) => {\n        console.log(...args)\n        reject(args)\n      }, onSuccess: (...args: any[]) => {\n        console.log(...args)\n        resolve(args as any)\n\t\t\t }\n      })\n    })\n  }\n\n  unsubscribe (subscription: ISubscription, ...args: any[]): Promise < ISocket > {\n    return new Promise((resolve, reject) => {\n      this.socket.unsubscribe(subscription.name, [...args, (err: any, granted: any) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(granted)\n      }])\n    })\n  }\n\n  unsubscribeAll (): Promise < ISocket > {\n    return Promise.resolve() as any\n  }\n  subscribeNotifyAll (): Promise < any > {\n    return Promise.resolve() as any\n  }\n\n  subscribeLoggedNotify (): Promise < any > {\n    return Promise.resolve() as any\n  }\n\n  subscribeNotifyUser (): Promise < any > {\n    return Promise.resolve() as any\n  }\n\n  login (credentials: ICredentials, args ?: any): Promise < any > {\n    return Promise.resolve() as any\n  }\n\t// usertyping room-messages deleted messages\n  subscribeRoom (rid: string, ...args: any[]): Promise < ISubscription[] > {\n    return this.subscribe(`room-messages/${rid}`, { qos: 0 }) as any\n  }\n\n  onMessage (cb: ICallback): void {\n    this.on('message', ({ topic, message }: any) => {\n      if (/room-messages/.test(topic)) {\n        cb(message)// TODO apply msgpack\n      }\n    })\n  }\n  async onTyping (cb: ICallback): Promise < any > {\n    return new Promise((resolve) => {\n      resolve(this.on('notify-room', ({ fields: { args: [username, isTyping] } }: any) => {\n        cb(username, isTyping)\n      }))\n\n    })\n  }\n\n  notifyVisitorTyping (rid: string, username: string, typing: boolean, token: string): Promise<any> {\n    return Promise.resolve() as any\n  }\n\n  onStreamData (name: string, cb: ICallback): Promise<any> {\n    return Promise.resolve(this.on(name, ({ fields: { args: [message] } }: any) => cb((message)))) as any\n  }\n\n  methodCall = (method: string, ...args: any[]): Promise<any> => {\n    return Promise.resolve() as any\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"mqtt.js","sourceRoot":"","sources":["../../../src/lib/drivers/mqtt.ts"],"names":[],"mappings":"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","sourcesContent":["import { Client } from 'paho-mqtt/src/paho-mqtt'\nimport { EventEmitter } from 'tiny-events'\n\nimport { logger as Logger } from '../log'\nimport { ISocket, IDriver } from './index'\nimport msgpack from 'msgpack-lite'\nimport {\n\tILogger,\n\tISocketOptions,\n\tICallback,\n\tISubscription,\n\tICredentials\n} from '../../interfaces'\n\nexport class MQTTDriver extends EventEmitter implements ISocket, IDriver {\n  logger: ILogger\n  config: ISocketOptions\n  socket: any\n  constructor ({ host = 'localhost', path = '/', integrationId, config, logger = Logger, ...moreConfigs }: any) {\n    super()\n    host = 'localhost'\n    const [, _host = host, , port = 8081] = new RegExp('(.*?)(:([0-9]+))?$').exec(host || 'localhost:3000') || []\n    this.config = {\n      ...config,\n      ...moreConfigs,\n      host: _host.replace(/^http/, 'ws'),\n      timeout: 20000,\n      port: port\n\t\t\t// reopen: number\n\t\t\t// ping: number\n\t\t\t// close: number\n\t\t\t// integration: string\n    }\n\n    this.logger = logger\n\n    if (/https/.test(host)) {\n      this.socket = new Client(this.config.host + path, 'clientId')\n    } else {\n      this.socket = new Client((this.config.host || '').replace('http://', '').replace('ws://', ''), Number(port), path, 'clientId')\n    }\n    this.socket.onMessageArrived = ({ destinationName, payloadBytes }: any) => {\n      if (/room-message/.test(destinationName)) {\n        this.emit('message', { topic: destinationName, message: msgpack.decode(payloadBytes) })\n      }\n    }\n  }\n\n  connect (options: ISocketOptions): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.socket.connect({ userName: 'livechat-guest', password: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2Ijp7InZpc2l0b3JUb2tlbiI6ImFqamVvY2N5dXhweXVlOTg3YzJ0NnMifSwidXNlciI6eyJ2Ijp7InZpc2l0b3JUb2tlbiI6ImFqamVvY2N5dXhweXVlOTg3YzJ0NnMifX0sIm5hbWUiOiJKb2huIERvZSIsImlhdCI6MTUxNjIzOTAyMn0.RTQz72NTgI6qWgQMCNHHaSNS13sDK3cz--ss2_5vAz8'\t, onSuccess: resolve, onFailure: reject, useSSL: /https/.test(this.config.host || '') })\n    })\n  }\n  disconnect (): Promise<any> {\n    this.socket.end()\n    return Promise.resolve(this.socket)\n  }\n\n  subscribe (topic: string, { qos = 0 }: any): Promise<ISubscription> {\n    return new Promise((resolve, reject) => {\n      this.socket.subscribe(topic, { qos, onFailure: (...args: any[]) => {\n        console.log(...args)\n        reject(args)\n      }, onSuccess: (...args: any[]) => {\n        console.log(...args)\n        resolve(args as any)\n\t\t\t }\n      })\n    })\n  }\n\n  unsubscribe (subscription: ISubscription, ...args: any[]): Promise < ISocket > {\n    return new Promise((resolve, reject) => {\n      this.socket.unsubscribe(subscription.name, [...args, (err: any, granted: any) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(granted)\n      }])\n    })\n  }\n\n  unsubscribeAll (): Promise < ISocket > {\n    return Promise.resolve() as any\n  }\n  subscribeNotifyAll (): Promise < any > {\n    return Promise.resolve() as any\n  }\n\n  subscribeLoggedNotify (): Promise < any > {\n    return Promise.resolve() as any\n  }\n\n  subscribeNotifyUser (): Promise < any > {\n    return Promise.resolve() as any\n  }\n\n  login (credentials: ICredentials, args ?: any): Promise < any > {\n    return Promise.resolve() as any\n  }\n\t// usertyping room-messages deleted messages\n  subscribeRoom (rid: string, ...args: any[]): Promise < ISubscription[] > {\n    return this.subscribe(`room-messages/${rid}`, { qos: 0 }) as any\n  }\n\n  onMessage (cb: ICallback): void {\n    this.on('message', ({ topic, message }: any) => {\n      if (/room-messages/.test(topic)) {\n        cb(message)// TODO apply msgpack\n      }\n    })\n  }\n  async onTyping (cb: ICallback): Promise < any > {\n    return new Promise((resolve) => {\n      resolve(this.on('notify-room', ({ fields: { args: [username, isTyping] } }: any) => {\n        cb(username, isTyping)\n      }))\n\n    })\n  }\n\n  notifyVisitorTyping (rid: string, username: string, typing: boolean, token: string): Promise<any> {\n    return Promise.resolve() as any\n  }\n\n  notifyCallDeclined (rid: string): Promise<any> {\n    return Promise.resolve() as any\n  }\n\n  onStreamData (name: string, cb: ICallback): Promise<any> {\n    return Promise.resolve(this.on(name, ({ fields: { args: [message] } }: any) => cb((message)))) as any\n  }\n\n  methodCall = (method: string, ...args: any[]): Promise<any> => {\n    return Promise.resolve() as any\n  }\n}\n"]}
\ No newline at end of file
